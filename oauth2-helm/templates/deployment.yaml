apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{.Values.replicaCount}}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{.Chart.Name}}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{.Values.image.pullPolicy}}
          ports:
            - containerPort: {{.Values.server.port}}
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
          env:
            - name: PATHS_PRIVATE_KEY
              value: "{{ .Values.paths.private_key }}"
            - name: PATHS_PUBLIC_KEY
              value: "{{ .Values.paths.public_key }}"
            - name: JWT_TOKEN_TTL
              value: "{{ .Values.jwt.token_ttl }}"
            - name: SERVER_PORT
              value: "{{ .Values.server.port }}"
            - name: API_TOKEN
              value: "{{ .Values.api.token }}"
            - name: API_JWKS
              value: "{{ .Values.api.jwks }}"
            - name: API_INTROSPECT
              value: "{{ .Values.api.introspect }}"              
          volumeMounts:
            - name: key-volume
              mountPath: "{{ .Values.volume.mountPath }}"
              readOnly: true
      volumes:
        - name: key-volume
          secret:
            secretName: {{.Values.volume.secretName}}
